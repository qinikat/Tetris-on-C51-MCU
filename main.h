#ifndef _MAIN_H
#define _MAIN_H

#include "reg51.h"

typedef unsigned int uint16_t; // 对系统默认数据类型进行重定义
typedef unsigned char uint8_t;

// 定义74HC595控制管脚
sbit SRCLK = P3 ^ 6; // 移位寄存器时钟输入
sbit RCLK = P3 ^ 5;	 // 存储寄存器时钟输入
sbit SER = P3 ^ 4;	 // 串行数据输入

#define LEDDZ_COL_PORT P0  // 点阵列控制端口
#define KEY_MATRIX_PORT P1 // 使用宏定义矩阵按键控制口

// 定义移动方向的枚举
typedef enum {
    MOVE_LEFT,
    MOVE_RIGHT,
    MOVE_DOWN
} BlockMoveDirection;

// 用于存储7种基本形状方块的各自的4种形态的信息，共28种
uint8_t code block[7][4][3][3] = {
	{
		// T型
		{{0, 0, 0},
		 {1, 1, 1},
		 {0, 1, 0}},
		{{0, 1, 0},
		 {1, 1, 0},
		 {0, 1, 0}},
		{{0, 1, 0},
		 {1, 1, 1},
		 {0, 0, 0}},
		{{0, 1, 0},
		 {0, 1, 1},
		 {0, 1, 0}},

	},
	{
		// L型
		{{0, 0, 0},
		 {1, 1, 1},
		 {1, 0, 0}},
		{{1, 1, 0},
		 {0, 1, 0},
		 {0, 1, 0}},
		{{0, 0, 1},
		 {1, 1, 1},
		 {0, 0, 0}},
		{{0, 1, 0},
		 {0, 1, 0},
		 {0, 1, 1}},

	},
	{
		// J型
		{{0, 0, 0},
		 {1, 1, 1},
		 {0, 0, 1}},
		{{0, 1, 0},
		 {0, 1, 0},
		 {1, 1, 0}},
		{{1, 0, 0},
		 {1, 1, 1},
		 {0, 0, 0}},
		{{0, 1, 1},
		 {0, 1, 0},
		 {0, 1, 0}},
	},
	{
		// Z型
		{{0, 0, 0},
		 {1, 1, 0},
		 {0, 1, 1}},
		{{0, 0, 1},
		 {0, 1, 1},
		 {0, 1, 0}},
		{{0, 0, 0},
		 {1, 1, 0},
		 {0, 1, 1}},
		{{0, 0, 1},
		 {0, 1, 1},
		 {0, 1, 0}},
	},
	{
		// S型
		{{0, 0, 0},
		 {0, 1, 1},
		 {1, 1, 0}},
		{{1, 0, 0},
		 {1, 1, 0},
		 {0, 1, 0}},
		{{0, 0, 0},
		 {0, 1, 1},
		 {1, 1, 0}},
		{{1, 0, 0},
		 {1, 1, 0},
		 {0, 1, 0}},
	},
	{
		// 田字型
		{{0, 0, 0},
		 {1, 1, 0},
		 {1, 1, 0}},
		{{0, 0, 0},
		 {1, 1, 0},
		 {1, 1, 0}},
		{{0, 0, 0},
		 {1, 1, 0},
		 {1, 1, 0}},
		{{0, 0, 0},
		 {1, 1, 0},
		 {1, 1, 0}},

	},
	{
		// I型
		{{0, 0, 0},
		 {1, 1, 1},
		 {0, 0, 0}},
		{{0, 1, 0},
		 {0, 1, 0},
		 {0, 1, 0}},
		{{0, 0, 0},
		 {1, 1, 1},
		 {0, 0, 0}},
		{{0, 1, 0},
		 {0, 1, 0},
		 {0, 1, 0}},
	},
};

uint8_t code led_map_start[11][10] = {
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

	{0, 0, 1, 1, 0, 0, 0, 1, 0, 0},
	{0, 1, 0, 0, 1, 0, 1, 0, 1, 0},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 0, 1, 1, 1, 1, 0, 0, 1, 0},
	{0, 0, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 1, 0, 1, 0, 0, 1, 0, 1, 0},
	{0, 0, 1, 0, 0, 0, 0, 1, 0, 0},

	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

// 游戏暂停图像
uint8_t code led_map_pause[11][10] = {
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

	{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 1, 1, 0, 0, 0, 0, 0},
	{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
	{0, 0, 0, 1, 0, 0, 1, 0, 0, 0},
	{0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
	{0, 0, 0, 1, 1, 0, 0, 0, 0, 0},
	{0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

// 游戏结束图像
uint8_t code led_map_over[11][10] = {
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 0, 1, 1, 0, 0, 1, 1, 0, 0},
	{0, 0, 1, 1, 0, 0, 1, 1, 0, 0},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},
	{0, 0, 1, 1, 0, 0, 1, 1, 0, 0},
	{0, 0, 1, 1, 0, 0, 1, 1, 0, 0},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0},

	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

#endif //_MAIN_H